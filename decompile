contract Contract {
    function main() {
        memory[0x40:0x60] = 0x80;
        var var0 = msg.value;
    
        if (var0) { revert(memory[0x00:0x00]); }
    
        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }
    
        var0 = msg.data[0x00:0x20] >> 0xe0;
    
        if (var0 != 0x58e858b7) { revert(memory[0x00:0x00]); }
    
        var var1 = 0x004a;
        var var2 = 0x0045;
        var var4 = 0x04;
        var var3 = var4 + (msg.data.length - var4);
        var var5;
        var2, var3, var4, var5 = func_022F(var3, var4);
        func_0045(var2, var3, var4, var5);
        stop();
    }
    
    function func_0045(var arg0, var arg1, var arg2, var arg3) {
        if (storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff == msg.sender) {
            var var0 = 0xffffffffffffffffffffffffffffffffffffffff & 0xe7057b10e2b59f46d151588d9c8694b4b8328f44;
            var var1 = 0xd6e03cd4;
            var temp0 = memory[0x40:0x60];
            memory[temp0:temp0 + 0x20] = (var1 & 0xffffffff) << 0xe0;
            var var2 = 0x014d;
            var var3 = storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff;
            var var4 = 0xdead;
            var var5 = 0x01;
            var var6 = arg0;
            var var7 = arg1;
            var var8 = arg2;
            var var9 = arg3;
            var var10 = temp0 + 0x04;
            var2 = func_0349(var3, var4, var5, var6, var7, var8, var9, var10);
            var3 = 0x00;
            var4 = memory[0x40:0x60];
            var5 = var2 - var4;
            var6 = var4;
            var7 = 0x00;
            var8 = var0;
            var9 = !address(var8).code.length;
        
            if (var9) { revert(memory[0x00:0x00]); }
        
            var temp1;
            temp1, memory[var4:var4 + var3] = address(var8).call.gas(msg.gas).value(var7)(memory[var6:var6 + var5]);
            var3 = !temp1;
        
            if (!var3) { return; }
        
            var temp2 = returndata.length;
            memory[0x00:0x00 + temp2] = returndata[0x00:0x00 + temp2];
            revert(memory[0x00:0x00 + returndata.length]);
        } else {
            var temp3 = memory[0x40:0x60];
            memory[temp3:temp3 + 0x20] = 0xd369966900000000000000000000000000000000000000000000000000000000;
            var temp4 = memory[0x40:0x60];
            revert(memory[temp4:temp4 + (temp3 + 0x04) - temp4]);
        }
    }
    
    function func_018A(var arg0) returns (var r0) { return arg0; }
    
    function func_0194(var arg0) {
        var var0 = 0x019d;
        var var1 = arg0;
        var0 = func_018A(var1);
    
        if (arg0 == var0) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_01AB(var arg0, var arg1) returns (var r0) {
        var var0 = msg.data[arg1:arg1 + 0x20];
        var var1 = 0x01ba;
        var var2 = var0;
        func_0194(var2);
        return var0;
    }
    
    function func_01C0(var arg0) returns (var r0) { return arg0 & 0xff; }
    
    function func_01CD(var arg0) {
        var var0 = 0x01d6;
        var var1 = arg0;
        var0 = func_01C0(var1);
    
        if (arg0 == var0) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_01E4(var arg0, var arg1) returns (var r0) {
        var var0 = msg.data[arg1:arg1 + 0x20];
        var var1 = 0x01f3;
        var var2 = var0;
        func_01CD(var2);
        return var0;
    }
    
    function func_01F9(var arg0) returns (var r0) { return arg0; }
    
    function func_0203(var arg0) {
        var var0 = 0x020c;
        var var1 = arg0;
        var0 = func_01F9(var1);
    
        if (arg0 == var0) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_021A(var arg0, var arg1) returns (var r0) {
        var var0 = msg.data[arg1:arg1 + 0x20];
        var var1 = 0x0229;
        var var2 = var0;
        func_0203(var2);
        return var0;
    }
    
    function func_022F(var arg0, var arg1) returns (var r0, var arg0, var arg1, var r3) {
        r3 = 0x00;
        var var1 = r3;
        var var2 = 0x00;
        var var3 = var2;
    
        if (arg0 - arg1 i>= 0x80) {
            var var4 = 0x00;
            var var5 = 0x0257;
            var var6 = arg0;
            var var7 = arg1 + var4;
            var5 = func_01AB(var6, var7);
            r3 = var5;
            var4 = 0x20;
            var5 = 0x0268;
            var6 = arg0;
            var7 = arg1 + var4;
            var5 = func_01E4(var6, var7);
            var1 = var5;
            var4 = 0x40;
            var5 = 0x0279;
            var6 = arg0;
            var7 = arg1 + var4;
            var5 = func_021A(var6, var7);
            var2 = var5;
            var4 = 0x60;
            var5 = 0x028a;
            var6 = arg0;
            var7 = arg1 + var4;
            var5 = func_021A(var6, var7);
            var temp0 = r3;
            r3 = var5;
            r0 = temp0;
            arg0 = var1;
            arg1 = var2;
            return r0, arg0, arg1, r3;
        } else {
            var4 = 0x0248;
            revert(memory[0x00:0x00]);
        }
    }
    
    function func_0296(var arg0) returns (var r0) { return arg0 & 0xffffffffffffffffffffffffffffffffffffffff; }
    
    function func_02B6(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x02c1;
        var var2 = arg0;
        return func_0296(var2);
    }
    
    function func_02C8(var arg0, var arg1) {
        var var0 = 0x02d1;
        var var1 = arg1;
        var0 = func_02B6(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_02D7(var arg0) returns (var r0) { return arg0; }
    
    function func_02EB(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0306;
        var var2 = 0x0301;
        var var3 = 0x02fc;
        var var4 = arg0;
        var3 = func_02D7(var4);
        var2 = func_02FC(var3);
        return func_0301(var2);
    }
    
    function func_02FC(var arg0) returns (var r0) { return arg0; }
    
    function func_0301(var arg0) returns (var r0) {
        r0 = func_018A(arg0);
        // Error: Could not resolve method call return address!
    }
    
    function func_030D(var arg0, var arg1) {
        var var0 = 0x0316;
        var var1 = arg1;
        var0 = func_02EB(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_031C(var arg0, var arg1) {
        var var0 = 0x0325;
        var var1 = arg1;
        var0 = func_018A(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_032B(var arg0, var arg1) {
        var var0 = 0x0334;
        var var1 = arg1;
        var0 = func_01C0(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_033A(var arg0, var arg1) {
        var var0 = 0x0343;
        var var1 = arg1;
        var0 = func_01F9(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_0349(var arg0, var arg1, var arg2, var arg3, var arg4, var arg5, var arg6, var arg7) returns (var r0) {
        var temp0 = arg7;
        var var0 = temp0 + 0xe0;
        var var1 = 0x035e;
        var var2 = temp0;
        var var3 = arg0;
        func_02C8(var2, var3);
        var1 = 0x036b;
        var2 = arg7 + 0x20;
        var3 = arg1;
        func_02C8(var2, var3);
        var1 = 0x0378;
        var2 = arg7 + 0x40;
        var3 = arg2;
        func_030D(var2, var3);
        var1 = 0x0385;
        var2 = arg7 + 0x60;
        var3 = arg3;
        func_031C(var2, var3);
        var1 = 0x0392;
        var2 = arg7 + 0x80;
        var3 = arg4;
        func_032B(var2, var3);
        var1 = 0x039f;
        var2 = arg7 + 0xa0;
        var3 = arg5;
        func_033A(var2, var3);
        var1 = 0x03ac;
        var2 = arg7 + 0xc0;
        var3 = arg6;
        func_033A(var2, var3);
        return var0;
    }
}

